image: xw-ci:alpine

#推荐使用idea的全部折叠功能（快捷键：ctrl+shift+'-'）以方便查看

variables:
 ACCOUNT_PACKAGE_NAME: 'account-web'
 ACCOUNT_PORT: 9002
 WORK_PACKAGE_NAME: 'work-system'
 WORK_PORT: 9003
 WECHAT_PACKAGE_NAME: 'wechat'
 WECHAT_PORT: 9004
 ATTENDANCE_PACKAGE_NAME: 'attendance'
 ATTENDANCE_PORT: 9005
 EXPENSE_PACKAGE_NAME: 'expense-reimbursement-web'
 EXPENSE_PORT: 9006

# 执行工作流定义

stages:
 - notify_rebuild

 - run_work
 - run_account
 - run_wechat
# - run_attendance
 - run_expense

 - release_work
 - release_account
 - release_wechat
# - release_attendance
 - release_expense

 - notify_failure
 - notify_runed

# 以下是自动部署到本地服务器中

run_work:
 stage: run_work
 only:
   - master
 script:
   - mvn  -Dmaven.test.skip=true -P dev clean package
   - cd $WORK_PACKAGE_NAME && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $WORK_PACKAGE_NAME && docker kill $WORK_PACKAGE_NAME
   - docker ps -a |grep $WORK_PACKAGE_NAME && docker rm $WORK_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $WORK_PORT:$WORK_PORT --name $WORK_PACKAGE_NAME $WORK_PACKAGE_NAME
 tags:
   - dev

run_account:
 stage: run_account
 only:
   - master
 script:
   - mvn  -Dmaven.test.skip=true -P dev clean package
   - cd $ACCOUNT_PACKAGE_NAME && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $ACCOUNT_PACKAGE_NAME && docker kill $ACCOUNT_PACKAGE_NAME
   - docker ps -a|grep $ACCOUNT_PACKAGE_NAME && docker rm $ACCOUNT_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -p $ACCOUNT_PORT:$ACCOUNT_PORT --name $ACCOUNT_PACKAGE_NAME $ACCOUNT_PACKAGE_NAME
 tags:
   - dev

run_wechat:
 stage: run_wechat
 only:
   - master
 script:
   - mvn  -Dmaven.test.skip=true -P dev clean package
   - cd $WECHAT_PACKAGE_NAME && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $WECHAT_PACKAGE_NAME && docker kill $WECHAT_PACKAGE_NAME
   - docker ps -a|grep $WECHAT_PACKAGE_NAME && docker rm $WECHAT_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $WECHAT_PORT:$WECHAT_PORT --name $WECHAT_PACKAGE_NAME $WECHAT_PACKAGE_NAME
 tags:
   - dev

#run_attendance:
# stage: run_attendance
# only:
#   - master
# script:
#   - mvn  -Dmaven.test.skip=true -P dev clean package
#   - cd attendance-system && mvn -Dmaven.test.skip=true docker:build
#   - docker ps |grep $ATTENDANCE_PACKAGE_NAME && docker kill $ATTENDANCE_PACKAGE_NAME
#   - docker ps -a|grep $ATTENDANCE_PACKAGE_NAME && docker rm $ATTENDANCE_PACKAGE_NAME
#   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $ATTENDANCE_PORT:$ATTENDANCE_PORT --name $ATTENDANCE_PACKAGE_NAME $ATTENDANCE_PACKAGE_NAME
# tags:
#   - dev

run_expense:
 stage: run_expense
 only:
   - master
 script:
   - mvn  -Dmaven.test.skip=true -P dev clean package
   - cd expense-reimbursement-web && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $EXPENSE_PACKAGE_NAME && docker kill $EXPENSE_PACKAGE_NAME
   - docker ps -a|grep $EXPENSE_PACKAGE_NAME && docker rm $EXPENSE_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $EXPENSE_PORT:$EXPENSE_PORT --name $EXPENSE_PACKAGE_NAME $EXPENSE_PACKAGE_NAME
 tags:
   - dev


# 以下是自动部署到阿里云，仅仅在部署分支release生效

release_work:
 stage: release_work
 only:
   - release
 script:
   - mvn  -Dmaven.test.skip=true -P release clean package
   - cd $WORK_PACKAGE_NAME && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $WORK_PACKAGE_NAME && docker kill $WORK_PACKAGE_NAME
   - docker ps -a |grep $WORK_PACKAGE_NAME && docker rm $WORK_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $WORK_PORT:$WORK_PORT --name $WORK_PACKAGE_NAME $WORK_PACKAGE_NAME
 tags:
   - aliyun

release_account:
 stage: release_account
 only:
   - release
 script:
   - mvn  -Dmaven.test.skip=true -P release clean package
   - cd $ACCOUNT_PACKAGE_NAME && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $ACCOUNT_PACKAGE_NAME && docker kill $ACCOUNT_PACKAGE_NAME
   - docker ps -a|grep $ACCOUNT_PACKAGE_NAME && docker rm $ACCOUNT_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $ACCOUNT_PORT:$ACCOUNT_PORT --name $ACCOUNT_PACKAGE_NAME $ACCOUNT_PACKAGE_NAME
 tags:
   - aliyun

release_wechat:
 stage: release_wechat
 only:
   - release
 script:
   - mvn  -Dmaven.test.skip=true -P release clean package
   - cd $WECHAT_PACKAGE_NAME && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $WECHAT_PACKAGE_NAME && docker kill $WECHAT_PACKAGE_NAME
   - docker ps -a|grep $WECHAT_PACKAGE_NAME && docker rm $WECHAT_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $WECHAT_PORT:$WECHAT_PORT --name $WECHAT_PACKAGE_NAME $WECHAT_PACKAGE_NAME
 tags:
   - aliyun

#release_attendance:
# stage: release_attendance
# only:
#   - release
# script:
#   - mvn  -Dmaven.test.skip=true -P release clean package
#   - cd attendance-system && mvn -Dmaven.test.skip=true docker:build
#   - docker ps |grep $ATTENDANCE_PACKAGE_NAME && docker kill $ATTENDANCE_PACKAGE_NAME
#   - docker ps -a|grep $ATTENDANCE_PACKAGE_NAME && docker rm $ATTENDANCE_PACKAGE_NAME
#   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $ATTENDANCE_PORT:$ATTENDANCE_PORT --name $ATTENDANCE_PACKAGE_NAME $ATTENDANCE_PACKAGE_NAME
# tags:
#   - aliyun

release_expense:
 stage: release_expense
 only:
   - release
 script:
   - mvn  -Dmaven.test.skip=true -P dev clean package
   - cd expense-reimbursement-web && mvn -Dmaven.test.skip=true docker:build
   - docker ps |grep $EXPENSE_PACKAGE_NAME && docker kill $EXPENSE_PACKAGE_NAME
   - docker ps -a|grep $EXPENSE_PACKAGE_NAME && docker rm $EXPENSE_PACKAGE_NAME
   - docker run -d -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/upload:/root/upload -p $EXPENSE_PORT:$EXPENSE_PORT --name $EXPENSE_PACKAGE_NAME $EXPENSE_PACKAGE_NAME
 tags:
   - aliyun

#  以下为状态通知

notify_rebuild:
 stage: notify_rebuild
 script:
  - curl -s --form-string "source=s-010d3fb8-1b2c-402b-850c-e24307d8" --form-string "receiver=g-8381911c-1e11-43ff-9928-63bdfc53" --form-string "title=$CI_PROJECT_NAME - $CI_BUILD_REF_NAME分支服务部署通知" --form-string "content=<h1>开始自动部署</h1></br><b>详情</b></br>用户:$GITLAB_USER_NAME </br>提交信息：$CI_COMMIT_MESSAGE " --form-string "url=http://git.xwseries.com/yuanwei/xiaowei-platform/pipelines/$CI_PIPELINE_IID" https://api.alertover.com/v1/alert -f utf-8 &
  - sleep 1
 tags:
  - aliyun

notify_runed:
 stage: notify_runed
 script:
  - curl -s --form-string "source=s-010d3fb8-1b2c-402b-850c-e24307d8" --form-string "receiver=g-8381911c-1e11-43ff-9928-63bdfc53" --form-string "title=$CI_PROJECT_NAME - $CI_BUILD_REF_NAME分支服务部署通知" --form-string "content=<h1>自动部署完成</h1></br><b>详情</b></br>用户:$GITLAB_USER_NAME </br>提交信息：$CI_COMMIT_MESSAGE " --form-string "url=http://git.xwseries.com/yuanwei/xiaowei-platform/pipelines/$CI_PIPELINE_IID" https://api.alertover.com/v1/alert -f utf-8 &
  - sleep 1
 tags:
  - aliyun

notify_failure:
 stage: notify_failure
 script:
  - nohup curl -s --form-string "source=s-010d3fb8-1b2c-402b-850c-e24307d8" --form-string "receiver=g-8381911c-1e11-43ff-9928-63bdfc53" --form-string "title=$CI_PROJECT_NAME - $CI_BUILD_REF_NAME分支服务部署错误通知" --form-string "content=<h1 style='color:red'>$CI_BUILD_REF_NAME分支服务部署过程中出现错误！</h1></br><b>详情</b></br></br>用户：$GITLAB_USER_NAME </br>提交信息：$CI_COMMIT_MESSAGE " --form-string "url=http://git.xwseries.com/yuanwei/xiaowei-platform/pipelines/$CI_PIPELINE_IID" https://api.alertover.com/v1/alert -f utf-8 &
  - sleep 1
 tags:
  - aliyun
 when: on_failure


